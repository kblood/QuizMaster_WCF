//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuizWebClient.WebQuizMasterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quiz", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class Quiz : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.User AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.Question[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.User Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.Question[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.Answer[] AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.Answer CorrectAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.Answer[] Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.Answer CorrectAnswer {
            get {
                return this.CorrectAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrectAnswerField, value) != true)) {
                    this.CorrectAnswerField = value;
                    this.RaisePropertyChanged("CorrectAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answer", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class Answer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuizInstance", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class QuizInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.User OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.Quiz QuizField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.User Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.Quiz Quiz {
            get {
                return this.QuizField;
            }
            set {
                if ((object.ReferenceEquals(this.QuizField, value) != true)) {
                    this.QuizField = value;
                    this.RaisePropertyChanged("Quiz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Running {
            get {
                return this.RunningField;
            }
            set {
                if ((this.RunningField.Equals(value) != true)) {
                    this.RunningField = value;
                    this.RaisePropertyChanged("Running");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionViewModel", Namespace="http://schemas.datacontract.org/2004/07/BLL.ViewModel")]
    [System.SerializableAttribute()]
    public partial class QuestionViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private QuizWebClient.WebQuizMasterService.State StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QuizWebClient.WebQuizMasterService.State State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/BLL.ViewModel")]
    public enum State : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPEN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOCKED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PENDING = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CORRECT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WRONG = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contestant", Namespace="http://schemas.datacontract.org/2004/07/BLL.Model")]
    [System.SerializableAttribute()]
    public partial class Contestant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuizInstanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuizInstanceId {
            get {
                return this.QuizInstanceIdField;
            }
            set {
                if ((this.QuizInstanceIdField.Equals(value) != true)) {
                    this.QuizInstanceIdField = value;
                    this.RaisePropertyChanged("QuizInstanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebQuizMasterService.IQuizMasterService")]
    public interface IQuizMasterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CreateQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/CreateQuizResponse")]
        QuizWebClient.WebQuizMasterService.Quiz CreateQuiz(string title, string description, QuizWebClient.WebQuizMasterService.User author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CreateQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/CreateQuizResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Quiz> CreateQuizAsync(string title, string description, QuizWebClient.WebQuizMasterService.User author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/Login", ReplyAction="http://tempuri.org/IQuizMasterService/LoginResponse")]
        QuizWebClient.WebQuizMasterService.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/Login", ReplyAction="http://tempuri.org/IQuizMasterService/LoginResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuizes", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuizesResponse")]
        QuizWebClient.WebQuizMasterService.Quiz[] GetQuizes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuizes", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuizesResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Quiz[]> GetQuizesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/InsertUser", ReplyAction="http://tempuri.org/IQuizMasterService/InsertUserResponse")]
        void InsertUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/InsertUser", ReplyAction="http://tempuri.org/IQuizMasterService/InsertUserResponse")]
        System.Threading.Tasks.Task InsertUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CreateQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/CreateQuestionResponse")]
        QuizWebClient.WebQuizMasterService.Question CreateQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CreateQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/CreateQuestionResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question> CreateQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/SaveQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/SaveQuestionResponse")]
        void SaveQuestion(QuizWebClient.WebQuizMasterService.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/SaveQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/SaveQuestionResponse")]
        System.Threading.Tasks.Task SaveQuestionAsync(QuizWebClient.WebQuizMasterService.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuestions", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuestionsResponse")]
        QuizWebClient.WebQuizMasterService.Question[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuestions", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuestionsResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question[]> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/OpenQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/OpenQuizResponse")]
        QuizWebClient.WebQuizMasterService.QuizInstance OpenQuiz(QuizWebClient.WebQuizMasterService.Quiz quiz, QuizWebClient.WebQuizMasterService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/OpenQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/OpenQuizResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> OpenQuizAsync(QuizWebClient.WebQuizMasterService.Quiz quiz, QuizWebClient.WebQuizMasterService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CloseQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/CloseQuizResponse")]
        void CloseQuiz(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/CloseQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/CloseQuizResponse")]
        System.Threading.Tasks.Task CloseQuizAsync(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/RunQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/RunQuizResponse")]
        void RunQuiz(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/RunQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/RunQuizResponse")]
        System.Threading.Tasks.Task RunQuizAsync(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuizRunningById", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuizRunningByIdResponse")]
        bool GetQuizRunningById(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetQuizRunningById", ReplyAction="http://tempuri.org/IQuizMasterService/GetQuizRunningByIdResponse")]
        System.Threading.Tasks.Task<bool> GetQuizRunningByIdAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/AddQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/AddQuestionResponse")]
        void AddQuestion(int quizId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/AddQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(int quizId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/RemoveQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/RemoveQuestionResponse")]
        void RemoveQuestion(int quizId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/RemoveQuestion", ReplyAction="http://tempuri.org/IQuizMasterService/RemoveQuestionResponse")]
        System.Threading.Tasks.Task RemoveQuestionAsync(int quizId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetAllByQuizId", ReplyAction="http://tempuri.org/IQuizMasterService/GetAllByQuizIdResponse")]
        QuizWebClient.WebQuizMasterService.Question[] GetAllByQuizId(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetAllByQuizId", ReplyAction="http://tempuri.org/IQuizMasterService/GetAllByQuizIdResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question[]> GetAllByQuizIdAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetActiveQuizByUserId", ReplyAction="http://tempuri.org/IQuizMasterService/GetActiveQuizByUserIdResponse")]
        QuizWebClient.WebQuizMasterService.QuizInstance GetActiveQuizByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/GetActiveQuizByUserId", ReplyAction="http://tempuri.org/IQuizMasterService/GetActiveQuizByUserIdResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> GetActiveQuizByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/DeleteQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/DeleteQuizResponse")]
        void DeleteQuiz(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizMasterService/DeleteQuiz", ReplyAction="http://tempuri.org/IQuizMasterService/DeleteQuizResponse")]
        System.Threading.Tasks.Task DeleteQuizAsync(int quizId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuizMasterServiceChannel : QuizWebClient.WebQuizMasterService.IQuizMasterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuizMasterServiceClient : System.ServiceModel.ClientBase<QuizWebClient.WebQuizMasterService.IQuizMasterService>, QuizWebClient.WebQuizMasterService.IQuizMasterService {
        
        public QuizMasterServiceClient() {
        }
        
        public QuizMasterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuizMasterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizMasterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizMasterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QuizWebClient.WebQuizMasterService.Quiz CreateQuiz(string title, string description, QuizWebClient.WebQuizMasterService.User author) {
            return base.Channel.CreateQuiz(title, description, author);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Quiz> CreateQuizAsync(string title, string description, QuizWebClient.WebQuizMasterService.User author) {
            return base.Channel.CreateQuizAsync(title, description, author);
        }
        
        public QuizWebClient.WebQuizMasterService.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public QuizWebClient.WebQuizMasterService.Quiz[] GetQuizes() {
            return base.Channel.GetQuizes();
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Quiz[]> GetQuizesAsync() {
            return base.Channel.GetQuizesAsync();
        }
        
        public void InsertUser(string username, string password) {
            base.Channel.InsertUser(username, password);
        }
        
        public System.Threading.Tasks.Task InsertUserAsync(string username, string password) {
            return base.Channel.InsertUserAsync(username, password);
        }
        
        public QuizWebClient.WebQuizMasterService.Question CreateQuestion() {
            return base.Channel.CreateQuestion();
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question> CreateQuestionAsync() {
            return base.Channel.CreateQuestionAsync();
        }
        
        public void SaveQuestion(QuizWebClient.WebQuizMasterService.Question question) {
            base.Channel.SaveQuestion(question);
        }
        
        public System.Threading.Tasks.Task SaveQuestionAsync(QuizWebClient.WebQuizMasterService.Question question) {
            return base.Channel.SaveQuestionAsync(question);
        }
        
        public QuizWebClient.WebQuizMasterService.Question[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question[]> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public QuizWebClient.WebQuizMasterService.QuizInstance OpenQuiz(QuizWebClient.WebQuizMasterService.Quiz quiz, QuizWebClient.WebQuizMasterService.User user) {
            return base.Channel.OpenQuiz(quiz, user);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> OpenQuizAsync(QuizWebClient.WebQuizMasterService.Quiz quiz, QuizWebClient.WebQuizMasterService.User user) {
            return base.Channel.OpenQuizAsync(quiz, user);
        }
        
        public void CloseQuiz(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance) {
            base.Channel.CloseQuiz(quizInstance);
        }
        
        public System.Threading.Tasks.Task CloseQuizAsync(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance) {
            return base.Channel.CloseQuizAsync(quizInstance);
        }
        
        public void RunQuiz(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance) {
            base.Channel.RunQuiz(quizInstance);
        }
        
        public System.Threading.Tasks.Task RunQuizAsync(QuizWebClient.WebQuizMasterService.QuizInstance quizInstance) {
            return base.Channel.RunQuizAsync(quizInstance);
        }
        
        public bool GetQuizRunningById(int quizId) {
            return base.Channel.GetQuizRunningById(quizId);
        }
        
        public System.Threading.Tasks.Task<bool> GetQuizRunningByIdAsync(int quizId) {
            return base.Channel.GetQuizRunningByIdAsync(quizId);
        }
        
        public void AddQuestion(int quizId, int questionId) {
            base.Channel.AddQuestion(quizId, questionId);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(int quizId, int questionId) {
            return base.Channel.AddQuestionAsync(quizId, questionId);
        }
        
        public void RemoveQuestion(int quizId, int questionId) {
            base.Channel.RemoveQuestion(quizId, questionId);
        }
        
        public System.Threading.Tasks.Task RemoveQuestionAsync(int quizId, int questionId) {
            return base.Channel.RemoveQuestionAsync(quizId, questionId);
        }
        
        public QuizWebClient.WebQuizMasterService.Question[] GetAllByQuizId(int quizId) {
            return base.Channel.GetAllByQuizId(quizId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question[]> GetAllByQuizIdAsync(int quizId) {
            return base.Channel.GetAllByQuizIdAsync(quizId);
        }
        
        public QuizWebClient.WebQuizMasterService.QuizInstance GetActiveQuizByUserId(int userId) {
            return base.Channel.GetActiveQuizByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> GetActiveQuizByUserIdAsync(int userId) {
            return base.Channel.GetActiveQuizByUserIdAsync(userId);
        }
        
        public void DeleteQuiz(int quizId) {
            base.Channel.DeleteQuiz(quizId);
        }
        
        public System.Threading.Tasks.Task DeleteQuizAsync(int quizId) {
            return base.Channel.DeleteQuizAsync(quizId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebQuizMasterService.IWebQuizMasterService")]
    public interface IWebQuizMasterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuestionView", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuestionViewResponse")]
        QuizWebClient.WebQuizMasterService.QuestionViewModel[] GetQuestionView(System.Guid contestantId, int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuestionView", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuestionViewResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuestionViewModel[]> GetQuestionViewAsync(System.Guid contestantId, int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/InsertContestant", ReplyAction="http://tempuri.org/IWebQuizMasterService/InsertContestantResponse")]
        QuizWebClient.WebQuizMasterService.Contestant InsertContestant(string Name, int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/InsertContestant", ReplyAction="http://tempuri.org/IWebQuizMasterService/InsertContestantResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Contestant> InsertContestantAsync(string Name, int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuizByUserID", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuizByUserIDResponse")]
        QuizWebClient.WebQuizMasterService.QuizInstance GetQuizByUserID(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuizByUserID", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuizByUserIDResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> GetQuizByUserIDAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetUserIdByName", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetUserIdByNameResponse")]
        int GetUserIdByName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetUserIdByName", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetUserIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuestionToAnswer", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuestionToAnswerResponse")]
        QuizWebClient.WebQuizMasterService.Question GetQuestionToAnswer(System.Guid contestantId, int quizInstanceId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuestionToAnswer", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuestionToAnswerResponse")]
        System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question> GetQuestionToAnswerAsync(System.Guid contestantId, int quizInstanceId, int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/AttemptAnswer", ReplyAction="http://tempuri.org/IWebQuizMasterService/AttemptAnswerResponse")]
        bool AttemptAnswer(int quizInstanceId, System.Guid contestantId, int questionId, System.Nullable<int> answerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/AttemptAnswer", ReplyAction="http://tempuri.org/IWebQuizMasterService/AttemptAnswerResponse")]
        System.Threading.Tasks.Task<bool> AttemptAnswerAsync(int quizInstanceId, System.Guid contestantId, int questionId, System.Nullable<int> answerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuizRunningByQuizId", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuizRunningByQuizIdResponse")]
        bool GetQuizRunningByQuizId(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebQuizMasterService/GetQuizRunningByQuizId", ReplyAction="http://tempuri.org/IWebQuizMasterService/GetQuizRunningByQuizIdResponse")]
        System.Threading.Tasks.Task<bool> GetQuizRunningByQuizIdAsync(int quizId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebQuizMasterServiceChannel : QuizWebClient.WebQuizMasterService.IWebQuizMasterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebQuizMasterServiceClient : System.ServiceModel.ClientBase<QuizWebClient.WebQuizMasterService.IWebQuizMasterService>, QuizWebClient.WebQuizMasterService.IWebQuizMasterService {
        
        public WebQuizMasterServiceClient() {
        }
        
        public WebQuizMasterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebQuizMasterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebQuizMasterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebQuizMasterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QuizWebClient.WebQuizMasterService.QuestionViewModel[] GetQuestionView(System.Guid contestantId, int quizId) {
            return base.Channel.GetQuestionView(contestantId, quizId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuestionViewModel[]> GetQuestionViewAsync(System.Guid contestantId, int quizId) {
            return base.Channel.GetQuestionViewAsync(contestantId, quizId);
        }
        
        public QuizWebClient.WebQuizMasterService.Contestant InsertContestant(string Name, int quizId) {
            return base.Channel.InsertContestant(Name, quizId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Contestant> InsertContestantAsync(string Name, int quizId) {
            return base.Channel.InsertContestantAsync(Name, quizId);
        }
        
        public QuizWebClient.WebQuizMasterService.QuizInstance GetQuizByUserID(int userId) {
            return base.Channel.GetQuizByUserID(userId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.QuizInstance> GetQuizByUserIDAsync(int userId) {
            return base.Channel.GetQuizByUserIDAsync(userId);
        }
        
        public int GetUserIdByName(string username) {
            return base.Channel.GetUserIdByName(username);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByNameAsync(string username) {
            return base.Channel.GetUserIdByNameAsync(username);
        }
        
        public QuizWebClient.WebQuizMasterService.Question GetQuestionToAnswer(System.Guid contestantId, int quizInstanceId, int questionId) {
            return base.Channel.GetQuestionToAnswer(contestantId, quizInstanceId, questionId);
        }
        
        public System.Threading.Tasks.Task<QuizWebClient.WebQuizMasterService.Question> GetQuestionToAnswerAsync(System.Guid contestantId, int quizInstanceId, int questionId) {
            return base.Channel.GetQuestionToAnswerAsync(contestantId, quizInstanceId, questionId);
        }
        
        public bool AttemptAnswer(int quizInstanceId, System.Guid contestantId, int questionId, System.Nullable<int> answerId) {
            return base.Channel.AttemptAnswer(quizInstanceId, contestantId, questionId, answerId);
        }
        
        public System.Threading.Tasks.Task<bool> AttemptAnswerAsync(int quizInstanceId, System.Guid contestantId, int questionId, System.Nullable<int> answerId) {
            return base.Channel.AttemptAnswerAsync(quizInstanceId, contestantId, questionId, answerId);
        }
        
        public bool GetQuizRunningByQuizId(int quizId) {
            return base.Channel.GetQuizRunningByQuizId(quizId);
        }
        
        public System.Threading.Tasks.Task<bool> GetQuizRunningByQuizIdAsync(int quizId) {
            return base.Channel.GetQuizRunningByQuizIdAsync(quizId);
        }
    }
}
